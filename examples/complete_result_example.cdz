// Complete Cadenza Result type example demonstrating all features

function safeDivide(a: int, b: int) -> Result<int, string> {
    if b == 0 {
        return Error("Division by zero")
    }
    return Ok(a / b)
}

function safeSqrt(n: int) -> Result<int, string> {
    if n < 0 {
        return Error("Cannot take square root of negative number")
    }
    return Ok(n * n)  // Simplified square for demo
}

function complexCalculation(x: int, y: int, z: int) -> Result<int, string> {
    let divided = safeDivide(x, y)?
    let squared = safeSqrt(divided)?
    let final = squared + z
    return Ok(final)
}

function chainedOperations(a: int, b: int, c: int) -> Result<int, string> {
    let step1 = safeDivide(a, b)?
    let step2 = safeDivide(step1, c)?
    return Ok(step2 * 10)
}