// <auto-generated>
// This file was generated by the Cadenza compiler. Do not edit manually.

using Microsoft.AspNetCore.Components;
using Microsoft.AspNetCore.Components.Rendering;
using Microsoft.JSInterop;

public class Counter : ComponentBase
{

    // Component Parameters
    [Parameter] public string title { get; set; } = default!;

    // Component State
    private int _count = 0;
    private string _message = "Click to count";

    // Service Injections
    [Inject] private IJSRuntime DOMService { get; set; } = default!;

    // Event Handlers
    private void handle_increment()
    {
        _count = (_count + 1);
        StateHasChanged();
        _message = ("Count: " + _count.ToString());
        StateHasChanged();
    }

    private void handle_reset()
    {
        _count = 0;
        StateHasChanged();
        _message = "Reset!";
        StateHasChanged();
    }


    protected override void BuildRenderTree(RenderTreeBuilder builder)
    {
        builder.OpenElement(0, "div");
        builder.AddAttribute(1, "class", "counter-container");
        builder.OpenElement(2, "h1");
        builder.AddContent(3, title);
        builder.CloseElement();
        builder.OpenElement(4, "p");
        builder.AddContent(5, _message);
        builder.CloseElement();
        builder.OpenElement(6, "div");
        builder.AddAttribute(7, "class", "buttons");
        builder.OpenElement(8, "button");
        builder.AddContent(9, "+");
        builder.AddAttribute(10, "onclick", EventCallback.Factory.Create(this, handle_increment));
        builder.CloseElement();
        builder.OpenElement(11, "button");
        builder.AddContent(12, "Reset");
        builder.AddAttribute(13, "onclick", EventCallback.Factory.Create(this, handle_reset));
        builder.CloseElement();
        builder.CloseElement();
        builder.CloseElement();
    }
}


